{"is_source_file": true, "format": "Python", "description": "This file defines API routes for managing swap proposals in an e-commerce backend. It includes endpoints to create swaps, list swaps with filters, retrieve swap details, and accept or decline swap proposals. The code employs FastAPI, SQLAlchemy, and Pydantic for web framework, ORM, and data validation respectively.", "external_files": ["src/core/security", "src/deps", "src/models", "src/models/enums", "src/schemas/swap"], "external_methods": ["decode_token", "db_session", "BaseModel.model_validate", "Listing", "Swap", "User", "SwapStatus"], "published": ["create_swap", "list_swaps", "get_swap", "accept_swap", "decline_swap"], "classes": [{"name": "_TokenUser", "description": "Internal helper schema to represent token-authenticated user identity for swaps."}, {"name": "SwapCreatePayload", "description": "Schema for payload used in creating a swap proposal."}], "methods": [{"name": "_TokenUser _auth_user(authorization: str | None = Header(default=None))", "description": "Extracts and validates the user UUID from the Authorization header token.", "scope": "", "scopeKind": ""}, {"name": "tuple[Listing,Listing,User,User] _validate_swap_parties(db: Session, proposer_id: UUID, proposer_listing_id: UUID, recipient_listing_id: UUID)", "description": "Validates existence and ownership of listings involved in a swap proposal.", "scope": "", "scopeKind": ""}, {"name": "SwapRead create_swap( payload: SwapCreatePayload, token_user: _TokenUser = Depends(_auth_user), db: Session = Depends(db_session), )", "description": "API endpoint to create a swap proposal between two listings.", "scope": "", "scopeKind": ""}, {"name": "List[SwapRead] list_swaps( mine: bool = Query(default=False, description=\"Show only swaps involving me\"), status: Optional[SwapStatus] = Query(default=None, description=\"Filter by status\"), authorization: str | None = Header(default=None), db: Session = Depends(db_session), )", "description": "API endpoint to list swaps with optional filters like ownership and status.", "scope": "", "scopeKind": ""}, {"name": "SwapRead get_swap( id: UUID, token_user: _TokenUser = Depends(_auth_user), db: Session = Depends(db_session), )", "description": "Fetches details of a specific swap by UUID, ensuring user authorization.", "scope": "", "scopeKind": ""}, {"name": "None _ensure_can_decide_swap(swap: Swap, token_user: _TokenUser)", "description": "Ensures only the counterparty can accept or decline the swap, and that swap is in proposed state.", "scope": "", "scopeKind": ""}, {"name": "SwapRead accept_swap( id: UUID, token_user: _TokenUser = Depends(_auth_user), db: Session = Depends(db_session), )", "description": "Allows the counterparty to accept a proposed swap.", "scope": "", "scopeKind": ""}, {"name": "SwapRead decline_swap( id: UUID, token_user: _TokenUser = Depends(_auth_user), db: Session = Depends(db_session), )", "description": "Allows the counterparty to decline a proposed swap.", "scope": "", "scopeKind": ""}], "calls": ["decode_token", "db_session", "Listing.id", "Listing.seller_id", "User.id", "Swap.status", "Swap.initiator_id", "Swap.counterparty_id", "Swap.created_at", "SwapRead.model_validate"], "search-terms": ["swap proposal API", "ecommerce swap endpoints", "swap management", "swap creation", "swap listing filters"], "state": 2, "file_id": 42, "knowledge_revision": 108, "git_revision": "", "ctags": [{"_type": "tag", "name": "SwapCreatePayload", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^class SwapCreatePayload(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_TokenUser", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^class _TokenUser(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_UUID", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^    from uuid import UUID as _UUID$/", "file": true, "language": "Python", "kind": "unknown", "scope": "_auth_user", "scopeKind": "function", "nameref": "unknown:UUID"}, {"_type": "tag", "name": "_auth_user", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^def _auth_user(authorization: str | None = Header(default=None)) -> _TokenUser:$/", "language": "Python", "typeref": "typename:_TokenUser", "kind": "function", "signature": "(authorization: str | None = Header(default=None))"}, {"_type": "tag", "name": "_ensure_can_decide_swap", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^def _ensure_can_decide_swap(swap: Swap, token_user: _TokenUser) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(swap: Swap, token_user: _TokenUser)"}, {"_type": "tag", "name": "_validate_swap_parties", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^def _validate_swap_parties(db: Session, proposer_id: UUID, proposer_listing_id: UUID, recipient_/", "language": "Python", "typeref": "typename:tuple[Listing,Listing,User,User]", "kind": "function", "signature": "(db: Session, proposer_id: UUID, proposer_listing_id: UUID, recipient_listing_id: UUID)"}, {"_type": "tag", "name": "accept_swap", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^def accept_swap($/", "language": "Python", "typeref": "typename:SwapRead", "kind": "function", "signature": "( id: UUID, token_user: _TokenUser = Depends(_auth_user), db: Session = Depends(db_session), )"}, {"_type": "tag", "name": "create_swap", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^def create_swap($/", "language": "Python", "typeref": "typename:SwapRead", "kind": "function", "signature": "( payload: SwapCreatePayload, token_user: _TokenUser = Depends(_auth_user), db: Session = Depends(db_session), )"}, {"_type": "tag", "name": "decline_swap", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^def decline_swap($/", "language": "Python", "typeref": "typename:SwapRead", "kind": "function", "signature": "( id: UUID, token_user: _TokenUser = Depends(_auth_user), db: Session = Depends(db_session), )"}, {"_type": "tag", "name": "get_swap", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^def get_swap($/", "language": "Python", "typeref": "typename:SwapRead", "kind": "function", "signature": "( id: UUID, token_user: _TokenUser = Depends(_auth_user), db: Session = Depends(db_session), )"}, {"_type": "tag", "name": "list_swaps", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^def list_swaps($/", "language": "Python", "typeref": "typename:List[SwapRead]", "kind": "function", "signature": "( mine: bool = Query(default=False, description=\"Show only swaps involving me\"), status: Optional[SwapStatus] = Query(default=None, description=\"Filter by status\"), authorization: str | None = Header(default=None), db: Session = Depends(db_session), )"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^    notes: Optional[str] = Field(default=None, description=\"Optional note for the proposal\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "SwapCreatePayload", "scopeKind": "class"}, {"_type": "tag", "name": "proposer_listing_id", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^    proposer_listing_id: UUID = Field(..., description=\"Listing owned by proposer (current user)/", "language": "Python", "typeref": "typename:UUID", "kind": "variable", "scope": "SwapCreatePayload", "scopeKind": "class"}, {"_type": "tag", "name": "recipient_listing_id", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^    recipient_listing_id: UUID = Field(..., description=\"Listing owned by the recipient user\")$/", "language": "Python", "typeref": "typename:UUID", "kind": "variable", "scope": "SwapCreatePayload", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/api/routers/swaps.py", "pattern": "/^router = APIRouter(prefix=\"\\/swaps\", tags=[\"swaps\"])$/", "language": "Python", "kind": "variable"}], "hash": "19f6a29a4046190dbe4c4a8ade410e59", "format-version": 4, "code-base-name": "ecommerce_backend", "filename": "ecommerce_backend/src/api/routers/swaps.py", "fields": [{"name": "Optional[str] notes", "scope": "SwapCreatePayload", "scopeKind": "class", "description": "unavailable"}, {"name": "UUID proposer_listing_id", "scope": "SwapCreatePayload", "scopeKind": "class", "description": "unavailable"}, {"name": "UUID recipient_listing_id", "scope": "SwapCreatePayload", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/swaps\", tags=[\"swaps\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"108": ""}]}