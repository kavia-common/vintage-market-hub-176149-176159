{"is_source_file": true, "format": "Python", "description": "This file provides security utilities for an ecommerce backend, including password hashing, JWT token creation and decoding, and configuration integration.", "external_files": ["src.core.config"], "external_methods": ["get_settings", "jwt.encode", "jwt.decode"], "published": ["get_password_hash", "verify_password", "create_access_token", "create_refresh_token", "decode_token"], "classes": [], "methods": [{"name": "str get_password_hash(password: str)", "description": "Hash a plaintext password using bcrypt via passlib.", "scope": "", "scopeKind": ""}, {"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Verify a plaintext password against a bcrypt hash.", "scope": "", "scopeKind": ""}, {"name": "str create_access_token(subject: str | int, expires_delta: Optional[timedelta] = None, additional_claims: Optional[Dict[str, Any]] = None)", "description": "Create a signed JWT access token with optional claims and expiration.", "scope": "", "scopeKind": ""}, {"name": "str create_refresh_token(subject: str | int, expires_delta: Optional[timedelta] = None, additional_claims: Optional[Dict[str, Any]] = None)", "description": "Create a signed JWT refresh token with optional claims and expiration.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] decode_token(token: str)", "description": "Decode and validate a JWT token, returning its payload or raising an error.", "scope": "", "scopeKind": ""}], "calls": ["get_settings", "jwt.encode", "jwt.decode", "datetime.now", "timedelta", "timezone.utc"], "search-terms": ["JWT token creation", "password hashing", "security utilities", "authentication", "token decoding"], "state": 2, "file_id": 6, "knowledge_revision": 13, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/core/security.py", "pattern": "/^def create_access_token(subject: str | int, expires_delta: Optional[timedelta] = None, additiona/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(subject: str | int, expires_delta: Optional[timedelta] = None, additional_claims: Optional[Dict[str, Any]] = None)"}, {"_type": "tag", "name": "create_refresh_token", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/core/security.py", "pattern": "/^def create_refresh_token(subject: str | int, expires_delta: Optional[timedelta] = None, addition/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(subject: str | int, expires_delta: Optional[timedelta] = None, additional_claims: Optional[Dict[str, Any]] = None)"}, {"_type": "tag", "name": "decode_token", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/core/security.py", "pattern": "/^def decode_token(token: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/core/security.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/core/security.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/core/security.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}], "hash": "8b3cc2974684eac839a2aa94f726cdd7", "format-version": 4, "code-base-name": "ecommerce_backend", "filename": "ecommerce_backend/src/core/security.py", "fields": [{"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"13": ""}]}