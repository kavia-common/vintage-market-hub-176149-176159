{"is_source_file": true, "format": "Python", "description": "This file implements payment processing services, including creating payment intents with Stripe or a mock provider, and verifying payment webhooks. It contains functions to interface with external payment providers, handle configuration, and process webhook payloads, serving as a backend service module for payment operations.", "external_files": ["src.core.config"], "external_methods": ["src.core.config.get_settings"], "published": ["create_payment_intent", "verify_webhook", "PaymentIntentResult"], "classes": [{"name": "PaymentIntentResult", "description": "A data class representing the result of a payment intent creation, including provider info, intent ID, client secret, amount, currency, and mock status."}], "methods": [{"name": "PaymentIntentResult create_payment_intent(amount_cents: int, currency: str = \"usd\", metadata: Optional[Dict[str, Any]] = None)", "description": "Creates a payment intent using Stripe if configured and available, otherwise returns a mock intent for testing.", "scope": "", "scopeKind": ""}, {"name": "Tuple[bool,Dict[str,Any]] verify_webhook(raw_body: bytes, signature: str | None)", "description": "Verifies and parses a webhook payload from Stripe or a mock provider, checking signatures or simulating verification as configured.", "scope": "", "scopeKind": ""}], "calls": ["get_settings()", "stripe.PaymentIntent.create()", "stripe.Webhook.construct_event()", "json.loads()"], "search-terms": ["payment_intent", "Stripe integration", "webhook verification", "payment provider", "create_payment_intent", "verify_webhook"], "state": 2, "file_id": 43, "knowledge_revision": 112, "git_revision": "", "ctags": [{"_type": "tag", "name": "PaymentIntentResult", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/services/payments.py", "pattern": "/^class PaymentIntentResult:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_payment_intent", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/services/payments.py", "pattern": "/^def create_payment_intent(amount_cents: int, currency: str = \"usd\", metadata: Optional[Dict[str,/", "language": "Python", "typeref": "typename:PaymentIntentResult", "kind": "function", "signature": "(amount_cents: int, currency: str = \"usd\", metadata: Optional[Dict[str, Any]] = None)"}, {"_type": "tag", "name": "is_mock", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/services/payments.py", "pattern": "/^    is_mock: bool = False$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "PaymentIntentResult", "scopeKind": "class"}, {"_type": "tag", "name": "stripe", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/services/payments.py", "pattern": "/^    stripe = None  # Stripe optional; we handle gracefully$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_webhook", "path": "/home/kavia/workspace/code-generation/vintage-market-hub-176149-176159/ecommerce_backend/src/services/payments.py", "pattern": "/^def verify_webhook(raw_body: bytes, signature: str | None) -> Tuple[bool, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "function", "signature": "(raw_body: bytes, signature: str | None)"}], "hash": "1635fae28268ac442f8e66f5417c3f6d", "format-version": 4, "code-base-name": "ecommerce_backend", "filename": "ecommerce_backend/src/services/payments.py", "fields": [{"name": "bool is_mock", "scope": "PaymentIntentResult", "scopeKind": "class", "description": "unavailable"}, {"name": "stripe = None  # Stripe optional; we handle gracefully", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"112": ""}]}